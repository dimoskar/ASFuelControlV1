Word,Count
=,315
/,191
{,135
},126
+,93
if,75
string,62
to,61
<summary>,60
new,60
</summary>,60
a,56
str,48
the,47
localized,46
up,46
==,45
Looks,45
similar,45
return,31
true;,27
false;,26
&&,26
!=,24
0),23
>,23
*,22
<,22
\"\\,20
decimal,20
public,20
//,19
for,19
int,18
is,18
i,17
null),17
decimal.Parse(vals[i,16
System.Globalization.NumberFormatInfo.CurrentInfo.NumberDecimalSeparator));,16
else,16
null;,16
0,15
0;,15
\0,\,14
void,14
-,14
and,14
return;,12
server,12
try,11
class,11
in,10
ParentNozzle.QueryTotals,10
var.Response,10
sale,10
catch,10
:,10
EuromatVariables,10
+=,9
//if,9
Sales.SaleData,9
of,9
i++),9
\string.Format("\{0:00}"\,\,8
_case,8
\HH:mm:ss.fff"\)\,8
(int,8
private,8
\"\\r\n"\);\,8
true);,8
ack,8
\System.IO.File.AppendAllText("\Euromat.log"\,\,8
\DateTime.Now.ToString("\dd/MM/yyyy\,8
null,8
true,7
invalidTotals,7
4,7
this,7
-=,7
ParentNozzle.TotalMisfunction,7
th,7
page,7
System.Threading.Thread(new,7
bytesRead);,6
};,6
following,6
\"\"\;\,6
\nwStream.Read(bufferRecieve,\,6
\1].Replace("\."\,\,6
Data,6
totalizers,6
WaitingForAnswer,6
using,6
Σφάλμα,6
(nozzlIndex,6
EuromatVariables(),6
=>,6
\2].Replace("\."\,\,6
pumpNumber);,6
with,6
totalizerDiff,6
byte[server.Client.ReceiveBufferSize];,6
nozzle,6
\"\nz"\;\,6
state.Sale.TotalVolume,6
dispensedVolume,6
\Encoding.ASCII.GetString(bufferRecieve,\,6
strNz,6
this.totalizers.Add(state);,6
state.Sale.SaleCompleted,6
server.Client.ReceiveBufferSize);,6
\"\0"\;\,6
server.Client.Send(buffer);,6
sale;,6
var,6
state.Sale.TotalPrice,6
<param,5
that,5
false);,5
//{,5
will,5
This,5
System.Threading.Thread,5
by,5
assembly,5
an,5
as,5
all,5
dispensedPrice;,5
(sale,5
2,5
DateTime.Now;,5
values,5
//},5
The,5
||,5
vars,4
(var.RateType,4
vals.Length,4
var.Nozzles[i].VolumeCash,4
fpAdd,4
again,4
\"\RECIEVE\,4
rate,4
or,4
stream---,4
pumpNumber),4
incoming,4
\"\2"\;\,4
this.Controller.DispenserStatusChanged,4
nz),4
var.Nozzles[i].VolumeCredit,4
%,4
------------------------------------------------------------------------------,4
\this.SendCommand(var,\,4
EventHandler<TotalsEventArgs>(Controller_TotalsRecieved);,4
\"\|"\\,4
bufferRecieve,4
\"\totalizerDiff\,4
System.Threading.ParameterizedThreadStart(this.ThreadRun));,4
this.Controller.DataChanged,4
nozzle.Enabled,4
state.Sale;,4
this.internalQueue[fuelPoint].Enqueue(values);,4
vals;,4
var.Nozzles[i].AmountCredit,4
fpChn,4
15000;,4
home,4
used,4
totalIndex,4
dispensedVolume;,4
Sales.SaleData();,4
\str,\,4
code,4
this.UnitPrice;,4
\"\."\)\,4
var.Nozzles[i].AmountCash,4
\"\ERROR"\;\,4
var.Data,4
\pumpNumber,\,4
EventHandler<FuelPointValuesArgs>(Controller_DispenserStatusChanged);,4
EventHandler<FuelPointValuesArgs>(Controller_DataChanged);,4
bytesRead,4
this.Controller.TotalsRecieved,4
content,4
specified,4
data,3
pump,3
connection,3
information,3
sales[i,3
TotalizerState,3
Receive,3
\dispensedPrice,\,3
bool,3
block,3
Αντλίας,3
Create,3
protocols,3
lastValuesSent,3
te,3
transmitted,3
//return,3
port,3
\"\_"\\,3
nz.GetLastSale();,3
(e.CurrentFuelPoint.DispensedVolume,3
request,3
Sale,3
vals,3
ASFuelControl.Common.FuelPointValues,3
EventHandler(sale_SaleCompeted);,3
get;,3
socket,3
totalDiff,3
last,3
Δεξαμενής,3
Version,3
Send,3
\totalizerDiff,\,3
file,3
sale.SaleProcessed,3
tank,3
List<Sales.SaleData>,3
tool,3
Totalizer,3
\unitPrice,\,3
(totalizerDiff,3
functionality,3
nz,3
Common.Sales.SaleData,3
SaleData,3
finally,3
set;,3
resource,3
set,3
\"\\\SalesHandler"\\,3
was,3
\ParentNozzle.ParentFuelPoint.SetExtendedProperty("\iNeedDisplay"\,\,3
until,3
current,2
\(decimal)Math.Pow(10,\,2
lastSale,2
server.GetStream();,2
});,2
throw,2
received,2
host,2
),2
\"\SEND\,2
RateTypeEnum,2
vals[vals.Length,2
List<EuromatNozzle>();,2
(RateTypeEnum)int.Parse(var.Response[6].ToString());,2
\dispensedVolume,\,2
\var,\,2
Αλλαγή,2
Runtime,2
this.salesCompleted.Remove(sale.SalesId);,2
var.RateType;,2
>=,2
foreach,2
\TotalizerEnd,\,2
break;,2
(nozzlIndex).ToString();,2
buffer,2
apo,2
nwStream.ReadTimeout,2
(TransTypeEnum)int.Parse(var.Response[5].ToString());,2
nozzlIndex),2
System.Text.UTF8Encoding.ASCII.GetBytes(var.Data);,2
\channel,\,2
multiResponse),2
//bytesRead,2
nozzlIndex.ToString();,2
regenerated,2
generated,2
\this.EuromatAuthorize(this,\,2
2));,2
nwStream,2
20;,2
vals);,2
(lastSale,2
Revision,2
8;,2
param),2
byte[],2
EuromatNozzle,2
nozzles.ToArray();,2
if(fuelPoint.Status,2
-1;,2
\server.Connect(this.ServerIp,\,2
nwStream.Close();,2
//Common.Sales.SaleData,2
//str,2
resp,2
\"\\\logs"\\,2
your,2
this.ServrerPort);,2
not,2
i);,2
Build,2
TcpClient();,2
\"\."\);\,2
\pricePerLiter.ToString("\N3"\).Replace("\,"\,\,2
List<EuromatNozzle>,2
this.openRates.Remove(nzStr);,2
Διαχειρηστής,2
this.ParentFuelPoint.AmountDecimalPlaces);,2
EuromatVariables();,2
EuromatNozzle();,2
TotalizerStart,2
NozzleClosed(int,2
dispensedPrice),2
n,2
this.ParentFuelPoint.ActiveNozzle,2
{1},2
//server.Client.Send(buffer);,2
string[],2
(multiResponse),2
1];,2
(this.IsNozzleOpen),2
str;,2
server.Client.ReceiveTimeout,2
4;,2
(this.sale,2
100%,2
10,2
(sales[i].TotalizerEnd,2
\2),\,2
SendCommand(EuromatVariables,2
\3].Replace("\."\,\,2
entries,2
(Common.Nozzle,2
Interface,2
//---convert,2
can,2
nozzles.Add(nozzle);,2
attribute,2
(this.salesCompleted.Contains(sale.SalesId)),2
\address,\,2
&,2
PumpNotification(int,2
((totalizerDiff,2
RateTypeEnum.Credit;,2
unitPrice;,2
string---,2
{2},2
dispenser,2
var.RateType,2
Base,2
state.Sale.UnitPrice,2
var.TransType,2
<=,2
Enumerators.FuelPointStatusEnum.Offline;,2
\nozzlIndex,\,2
handling,2
behavior,2
RateTypeEnum.Both),2
\nwStream.Write(buffer,\,2
vars.EuromatDispenserNumber,2
totals,2
nozzle.RateType,2
var.TransactionId,2
με,2
nz.CurrentSale;,2
5),2
\totalAmount.ToString("\N2"\).Replace("\,"\,\,2
λίτρα,2
this.InvalidSale,2
\strNz.Substring(2,\,2
\Channel,\,2
COM,2
\dispenseVolume,\,2
resp.Split('|');,2
RateTypeEnum.Cash),2
(this.EuromatAuthorize,2
display,2
Enumerators.FuelPointStatusEnum.Work),2
(!var.WaitingForAnswer),2
OK,2
ex),2
resp[4];,2
Sales.SaleHandler();,2
through,2
Common.Nozzle,2
(var.Response,2
BASED,2
you,2
incorrect,2
\"\TIMEOUT\,2
EuromatVars,2
Byte[],2
NetworkStream,2
Start-End,2
var.WaitingForAnswer,2
\this.openNozzles.Add(var.Data.Substring(2,\,2
ResGen,2
\times"\);\,2
nozzles,2
//System.Threading.Thread,2
totalizer,2
type,2
DISPLAY,2
(fuelPoint.Status,2
150,2
\(int)Math.Pow(2,\,2
may,2
\strNz,\,2
this.internalQueue[fuelPoint].TryDequeue(out,2
project,2
\"\0"\\,2
\"\"\\,2
lost,2
nz.QueryTotals,2
this.Controller.FuelPoints,2
this.fuelPoints.ToArray();,2
EuromatAuthorizeEventArgs(),2
1);,2
1000;,2
Δεδομένων,2
\SendCommand(vars1,\,2
n.SuspendSale,2
volume),2
\SendCommand(vars,\,2
ParentNozzle.ParentFuelPoint.Channel;,2
2))),2
IP,2
this.salesCompleted.RemoveAt(0);,2
διαφορά.,2
<auto-generated>,2
\name="\nozzleTotalizer"\></param>\,2
this.openRates[nzStr];,2
\nz.SetExtendedProperty("\TotalIndex"\,\,2
---read,2
</auto-generated>,2
th.Start(vars);,2
ack;,2
1,2
//th.Start(vars);,2
\(int)ParentNozzle.ParentFuelPoint.GetExtendedProperty("\tries"\,\,2
param,2
dispensedVolume),2
sale.SaleCompleted),2
\"\ERROR"\)\,2
{0},2
dataReceived,2
\"\ft"\;\,2
\pricePerLiter,\,2
(this.internalQueue[fuelPoint].Count,2
Changes,2
nozzleTotalizer;,2
2;,2
cause,2
var.Nozzles,2
be,2
foo,2
List<Sales.SaleData>();,2
έχει,2
\dispensedVolume"\;\,2
(this.openRates.ContainsKey(nzStr)),2
\case,\,2
into,2
\openRates.Add(var.Data.Substring(2,\,2
Enumerators.FuelPointStatusEnum.Nozzle),2
System.ComponentModel.PropertyChangedEventHandler(fpi_PropertyChanged);,2
this.sale,2
\unitprice,\,2
nzStr,2
GetLastSale(),2
\(ack.StartsWith("\AK"\))\,2
attached,2
\(!this.openNozzles.Contains(strNz.Substring(2,\,2
vars1,2
(Exception,2
buffer.Length);,2
th.Start();,2
ParentNozzle.ParentFuelPoint.Address;,2
500),2
\fp,\,2
fpi.PropertyChanged,2
if(Properties.Settings.Default.SalesLogger),2
ThreadRun(object,2
((int)rate).ToString();,2
(this.ParentFuelPoint,2
Adds,2
2);,2
1].TotalizerStart),2
this.openNozzles.Remove(nzStr);,2
(this.salesCompleted.Count,2
fuelPoint.Status,2
διεύθυνση,2
pumpNumber;,2
classes,2
var.RateType);,2
TransactionCompleted(int,2
//bufferRecieve,2
\invalidTotals,time\,2
this.lastSales.Count,2
var.Response.Substring(7);,2
EuromatVariables;,2
\totalAmount,\,2
state.Sale.TotalizerStart,2
server.ReceiveTimeout,2
this.sale.SaleCompeted,2
\fuelPoint.SetExtendedProperty("\Work"\,\,2
nz.CurrentSale,2
n.saleHandler.ClearTotalizers();,2
\4].Replace("\."\,\,2
TcpClient,2
Κάρτα,2
κανάλι,2
first,2
tries,2
στο,2
Version:4.0.30319.42000,2
((foo,2
ComVisible,2
(int)0),2
\(var.Response.StartsWith("\CT"\))\,2
\volume.ToString("\N2"\).Replace("\,"\,\,2
//---read,2
//Console.WriteLine(dataReceived);,2
//string,2
\TotalizerStart,\,2
GetSale(int,2
Παροχή,2
this),2
\Exception("\Tried\,2
while,2
0.50m),2
Συνδεσης,2
fuelPoint.Nozzles),2
ret,2
volume);,1
lastSale;,1
System.IO.File.AppendAllText(System.Environment.CurrentDirectory,1
FuelPointValues();,1
\AssemblyVersion("\1.0.*"\)]\,1
when,1
VS,1
sender,1
βάσει,1
this.lastSales.Where(s,1
\2,\,1
this.sale.TotalizerStart,1
calcAmount;,1
there,1
compatible,1
(this.TotalizerEnd,1
(totalizerDiff>0,1
modify,1
Ημερομηνίας,1
e),1
(this.totalizers.Count,1
vals.ActiveNozzle,1
calcAmount,1
address,1
auto-generated,1
Ανοιχτή,1
list,1
program,1
Μετρητά,1
default,1
Αργία,1
values.Status),1
decimal.Round(newSale.TotalVolume,1
makes,1
TCP,1
//10,1
//8,1
sale.SaleProcessed),1
\strings,\,1
Number,1
decimalPart,1
ls.TotalizerStart).ToList();,1
SaleData();,1
IPv6,1
n.TotalVolume).ToArray();,1
fp,1
(int)(calcAmount,1
less,1
DateTime.Now.Subtract(lastValuesSent).TotalSeconds,1
\"\else"\;\,1
e.Values.CurrentSalePrice;,1
nz.TotalVolume),1
Σε,1
lastSale.TotalizerEnd;,1
th.Start(fp);,1
Enumerators.FuelPointStatusEnum.Offline,1
προγράμματος,1
\(System.IO.File.Exists("\TransactionCompleted.log"\))\,1
Address,1
newSale.UnitPrice,1
150),1
(fp,1
controlled,1
150)),1
types,1
nz.LastTotalVolume,1
maxTotal;//,1
//6,1
processing,1
\option,\,1
1),1
8,1
this.sale;,1
ResourceManager,1
fuelPoint.Nozzles.Select(n,1
100),1
this.lastSales.OrderBy(l,1
einai,1
232,1
need,1
List<TotalizerState>();,1
DateTime.MinValue,1
this.TotalPrice),1
session,1
consists,1
this.lastSales.Select(s,1
SetConnectorDebugMode();,1
CurrentUICulture,1
//7,1
newSale.TotalVolume,1
\name="\dispensedPrice"\></param>\,1
Sales.SaleData;,1
\this.EnqueValues(fp,\,1
If,1
Numbers,1
Το,1
reference,1
\COM,\,1
0).FirstOrDefault();,1
saleHandler,1
You,1
Πίνακα,1
Display,1
\string.Format("\{0}\t{1}\t{2}\t{3}\t{4}\t{5}\t{6}\t{7}\t{8}\t{9}\t{10}\n"\,\,1
state.Sale.TotalizerEnd,1
\"\\\SalesHandler"\);\,1
ParentNozzle,1
\//Address,\,1
keeps,1
then,1
(fuelPoint.ActiveNozzle,1
this.totalizers.Count;,1
RequestTotals,1
newSale,1
\+"\_"\+\,1
this.totalVolume;,1
//an,1
newSale.TotalPrice,1
like,1
TotalizerState();,1
StronglyTypedResourceBuilder,1
\e.CurrentFuelPoint.DispensedVolume,\,1
ParentNozzle.ParentFuelPoint.DispensedVolume,1
Διακοπή,1
stores,1
Σάββατο,1
newSale.SaleEndTime,1
//n.saleHandler.ParentNozzle,1
newSales.Add(newSale);,1
\"\DispensedVolume\,1
(oldSale,1
3,1
main,1
\member,\,1
\+"\.txt"\,\,1
access,1
//Litra=diafora,1
this.lastTotalVolume;,1
if(rateType,1
catch(Exception,1
2),1
associated,1
(fuelPoint.DispenserStatus,1
rerun,1
on,1
totalizerDiff;//Litra=diafora,1
volDiff,1
RS422,1
fuelPoint.DispensedAmount,1
//2,1
this.TotalVolume;,1
this.TotalizerStart),1
this.saleHandler.GetLastSale();,1
RS485,1
state.Sale,1
newSale.TotalizerStart,1
\System.IO.File.AppendAllText("\TransactionCompleted.log"\,\,1
//this.salesCompleted.Add(sale.SalesId);,1
Σύνδεση,1
Loop,1
Get,1
//RequestTotals,1
Πώληση,1
Ισοζυγίου,1
100,1
n;,1
this.lastSales.AddRange(newSales.ToArray());,1
\(decimal)nz.GetExtendedProperty("\LastTotalVolume"\)\,1
totalsDecimalPlaces),1
this.ActiveNozzle.QueryTotals,1
\nz.saleHandler.AddTotalizer(e.TotalVolume,\,1
'*',1
fuelPoint.ActiveNozzle.CurrentSale,1
e.CurrentFuelPoint.DispensedAmount);,1
if(!invalidTotals),1
lastState,1
but,1
fuelPoint.ActiveNozzle.CurrentSale.SaleEndTime,1
fp.EuromatTransactionParameters,1
totalsDecimalPlaces);,1
sales[i].TotalizerEnd;,1
//Euro=Litra*unitprice;,1
e.Values.HasTotalMisfunction,1
ASFuelControl.Common.Sales,1
\System.IO.File.AppendAllText(System.Environment.CurrentDirectory+"\\\logs"\+"\\\SalesHandler"\\,1
Ισοζύγιο,1
lastSales,1
Τετάρτη,1
fuelPoint.ActiveNozzle.CurrentSale.UnitPrice,1
(n.saleHandler,1
General,1
e.ToString());,1
this.CurrentSale,1
(this.currentStatus,1
\0\r\n"\);\,1
\invalidTotals,\,1
Αδικαιολόγητη,1
calcAmount),1
diafora,1
(int)calcAmount;,1
contains,1
newSale.TotalizerStart),1
//5,1
Επί,1
SaleHandler,1
Minor,1
CheckSale(int,1
lastSale.SaleProcessed,1
Major,1
καυσίμου,1
calcAmount)),1
sales.Count,1
add,1
System.Threading.ThreadStart(this.ThreadOpenNozzleRun));,1
h,1
if(,1
Κυριακή,1
CurrentSale,1
//4,1
(newSale.TotalizerEnd,1
newSales,1
property,1
n.Index,1
(nz,1
//ASFuelControl.Common.FuelPointValues,1
Controller,1
7,1
this.internalQueue[fuelPoint].Last();,1
\class,\,1
Πέμπτη,1
AddressFamily,1
nozzleId),1
specify,1
s.TotalVolume,1
\nz.UnitPrice,\,1
Ογκομετρικού,1
(int)0);,1
\newSale.UnitPrice,\,1
this.totalizers.RemoveAt(0);,1
Εβδομαδιαίος,1
leei,1
Στόμιο,1
5,1
\ParentNozzle.ParentFuelPoint.SetExtendedProperty("\tries"\,\,1
GetLastTotalizer(),1
n.saleHandler.AddDummyTotalizer(n.TotalVolume);,1
Παράλληλη,1
this.sale.SaleCompeted+=new,1
//pare,1
than,1
missmatch,1
s.TotalizerEnd).Max();,1
\state.Sale.TotalizerEnd,\,1
shown,1
\Address,\,1
\0"\;\,1
value;,1
Δεξαμενή,1
//9,1
this.ParentFuelPoint.DispensedVolume,1
values:,1
There,1
//if((dispensedPrice,1
state.Sale.TotalizerStart),1
sale.TotalVolume,1
(typical,1
//Sales.SaleData,1
if(e.CurrentFuelPoint.DispensedVolume,1
RS232,1
value,1
+-50cents,1
methods,1
Απώλεια,1
typelib,1
Παραλαβή,1
if(sale.SaleProcessed),1
nozzleId).FirstOrDefault();,1
Enumerators.FuelPointStatusEnum.Offline),1
\tries"\;\,1
this.CurrentSale.TotalizerStart,1
Παρασκευή,1
Πιστώσει,1
20),1
storing,1
fuelPoint.DispensedVolume,1
fuelPoint.DispenserStatus,1
System.Text;,1
System;,1
Sales.SaleHandler,1
(Math.Abs((dispensedPrice,1
Πιστωτική,1
values);,1
nz.ParentFuelPoint.DispensedAmount,1
requests,1
\_case,\,1
strongly,1
visible,1
hanldels,1
if(totalizers.Count,1
this.sale.UnitPrice,1
RS,1
\lastState.Totalizer,\,1
this.salesCompleted.Add(sale.SalesId);,1
newSale.TotalizerEnd,1
fp.Nozzles.Where(n,1
AddTotalizer(decimal,1
get,1
\==0"\;\,1
fuelPoint.LastValues;,1
0.50m,1
6,1
sale.TotalizerEnd),1
//else,1
related,1
1;,1
fuel,1
s.TotalizerStart,1
(int)this.RateType;,1
Τιμής,1
avoid,1
System.Collections.Generic;,1
//n.saleHandler,1
etc,1
nozzleTotalizer,1
Enumerators.FuelPointStatusEnum.Close),1
thread's,1
method,1
\if((int)ParentNozzle.ParentFuelPoint.GetExtendedProperty("\tries"\,\,1
attributes,1
entry,1
(nz.LastTotalVolume,1
if(n.saleHandler,1
this;,1
four,1
are,1
process,1
Visual,1
Σειρά,1
(Math.Abs(calcPrice,1
rateType,1
euro,1
(newSales.Count,1
;,1
state,1
ParentNozzle.ParentFuelPoint.DispensedAmount,1
SetPresetVolume(Common.FuelPoint,1
(oldValues.Status,1
newSale.SaleCompleted,1
remove,1
this.lastSales.Add(sale);,1
diff,1
this.sale});,1
\"\_Ex.txt"\,\,1
rebuild,1
components,1
virtual,1
Δευτέρα,1
9,1
tries++;,1
via,1
sta,1
LostSaleEventArgs(),1
Στόλου,1
nozzleId);,1
\name="\dispensedVolume"\></param>\,1
\"\too\,1
lookups,1
this.totalVolume,1
address);,1
\(nz.GetExtendedProperty("\LastTotalVolume"\)\,1
maxTotal,1
typed,1
sale.TotalizerEnd,1
tries);,1
//sale.SaleProcessed,1
(ASFuelControl.Common.Enumerators.FuelPointStatusEnum)(int)fuelPoint.Status;,1
this.lastTotalPrice;,1
(lastValuesSent,1
obtain,1
totalizerDiff;,1
sale.TotalizerEnd;,1
(this.lastSales.Count,1
supported,1
false,1
oldValues,1
System.Threading.ParameterizedThreadStart(this.ThreadTransactionCloseRun));,1
Γενικός,1
<returns></returns>,1
exception,1
vals.Status,1
To,1
(maxTotal,1
occurs,1
vals.TotalVolumes,1
displayed,1
\ParentNozzle.ParentFuelPoint.Address,//0\,1
cached,1
(DateTime.Now.Subtract(lastValuesSent).TotalSeconds,1
this.TotalVolume,1
exposed,1
GUID,1
A,1
\dispensedVolume==0"\;\,1
sale.TotalizerStart,1
1].TotalizerStart;,1
SetPresetAmount(Common.FuelPoint,1
Overrides,1
looking,1
these,1
\"\totalizerDiff==0\,1
instance,1
this.ParentFuelPoint.DispensedAmount,1
if(sale,1
(lastState,1
λειτουργίας,1
100;,1
oldSale,1
/n.CurrentSale,1
Συναγερμός,1
//3,1
.ResX,1
oti,1
//INVOICE,1
//if(sale.SaleProcessed),1
Χρήστης,1
System.Threading.ThreadStart(this.ThreadCloseNozzleRun));,1
state.Totalizer,1
\this.SaleLostEvent(this,\,1
Clears,1
transfer,1
previous,1
Τρίτη,1
\ParentNozzle.ParentFuelPoint.Channel,//1\,1
INVOICE,1
Count,1
fuelPoint.Initialized,1
edit,1
l.TotalizerStart).LastOrDefault();,1
strongly-typed,1
(!this.IsNozzleOpen),1
//if(n.TotalVolume,1
Η,1
many,1
about,1
decimal.Round(state.Sale.TotalVolume,1
case),1
nz.TotalVolume,1
(this.SaleLostEvent,1
System.DateTime.Now));,1
/Totalizer,1
this.euromat.NozzleClosed(fuelPoint.EuromatNumber);,1
from,1
CurrentLoop,1
this.totalizers.Clear();,1
AddressList,1
(openConnection),1
for(int,1
this.totalizers.Last().Sale;,1
List,1
provides,1
if(totalizerDiff,1
lastState.Totalizer;,1
-1,1
MidpointRounding.AwayFromZero);,1
System.Linq;,1
this.lastSales.RemoveAt(0);,1
use,1
Κλειστή,1
this.saleHandler.ParentNozzle,1
Information,1
this.totalizers.LastOrDefault();,1
(state.Sale.TotalizerEnd,1
amount);,1
(Math.Abs(volDiff),1
this.CurrentSale.UnitPrice,1
tha,1
\name="\unitPrice"\></param>\,1
System.IO.Directory.CreateDirectory(System.Environment.CurrentDirectory,1
List<TotalizerState>,1
Change,1
\nozzleTotalizer,\,1
time,1
calcPrice,1
(this.ActiveNozzle,1
i=0;,1
Διαφορά,1
Συσκευή,1
below:,1
!sale.SaleCompleted,1
FuelPoint,1
family,1
this.lastSales.OrderBy(ls,1
namespace,1
(calcAmount,1
Studio,1
ID,1
\"\\n"\\,1
sales,1
Returns,1
\this.GetFulePoint(channel,\,1
[assembly:,1
fuelPoint.ActiveNozzle.TotalMisfunction;,1
nz.ParentFuelPoint.DispensedVolume,1
Setting,1
/str,1
protocol,1
,1
