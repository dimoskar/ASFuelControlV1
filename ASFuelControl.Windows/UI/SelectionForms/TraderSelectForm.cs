using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ASFuelControl.Windows.UI.SelectionForms
{
    public partial class TraderSelectForm : SelectionBaseForm
    {
        public TraderSelectForm()
        {
            InitializeComponent();

            Telerik.WinControls.UI.GridViewTextBoxColumn nameColumn = new Telerik.WinControls.UI.GridViewTextBoxColumn();
            nameColumn.FieldName = "Name";
            nameColumn.HeaderText = "Ονομασία";
            nameColumn.IsAutoGenerated = false;
            nameColumn.Name = "Name";
            nameColumn.Width = 250;

            Telerik.WinControls.UI.GridViewTextBoxColumn afmColumn = new Telerik.WinControls.UI.GridViewTextBoxColumn();
            afmColumn.FieldName = "TaxRegistrationNumber";
            afmColumn.HeaderText = "Α.Φ.Μ.";
            afmColumn.IsAutoGenerated = false;
            afmColumn.Name = "TaxRegistrationNumber";
            afmColumn.Width = 80;

            Telerik.WinControls.UI.GridViewTextBoxColumn delColumn = new Telerik.WinControls.UI.GridViewTextBoxColumn();
            delColumn.FieldName = "DeliveryAddress";
            delColumn.HeaderText = "Παράδοση";
            delColumn.IsAutoGenerated = false;
            delColumn.Name = "DeliveryAddress";
            delColumn.Width = 100;

            this.dataRadGridView.Columns.Add(nameColumn);
            this.dataRadGridView.Columns.Add(afmColumn);
            this.dataRadGridView.Columns.Add(delColumn);
            this.dataRadGridView.AutoSizeColumnsMode = Telerik.WinControls.UI.GridViewAutoSizeColumnsMode.Fill;
        }

        protected override object SearchData(string filter)
        {
            Data.DatabaseModel db = new Data.DatabaseModel(Properties.Settings.Default.DBConnection);

            var q = db.Traders;
            if (filter != null && filter != "")
            {
                q = q.Where(t =>
                    t.Name.Contains(filter) ||
                    t.TaxRegistrationNumber.Contains(filter) ||
                    t.Phone1.Contains(filter) ||
                    t.DeliveryAddress.Contains(filter)
                );
            }
            var qa = q.OrderBy(t=>t.Name).ToArray();
            List<ViewModels.TraderViewModel> list = new List<ViewModels.TraderViewModel>();
            foreach(var entity in qa)
            {
                ViewModels.TraderViewModel tvm = new ViewModels.TraderViewModel();
                tvm.Load(db, entity.TraderId);
                list.Add(tvm);
            }
            db.Dispose();

            return list.ToArray();
        }

        protected override object SearchData(Guid traderId)
        {
            Data.DatabaseModel db = new Data.DatabaseModel(Properties.Settings.Default.DBConnection);

            var q = db.Traders.Where(t=>t.TraderId == traderId);
            var qa = q.ToArray();
            List<ViewModels.TraderViewModel> list = new List<ViewModels.TraderViewModel>();
            foreach (var entity in qa)
            {
                ViewModels.TraderViewModel tvm = new ViewModels.TraderViewModel();
                tvm.Load(db, entity.TraderId);
                list.Add(tvm);
            }
            db.Dispose();

            return list.ToArray();
        }

        private void radButton1_Click(object sender, EventArgs e)
        {
            using (Forms.TraderForm tf = new Forms.TraderForm())
            {
                tf.CreateCustomer();
            }
        }

        private void radButton2_Click(object sender, EventArgs e)
        {
            using (Forms.TraderForm tf = new Forms.TraderForm())
            {
                tf.CreateCustomer();
                tf.ShowDialog(this);
                if (tf.SelectedCustomerId != Guid.Empty)
                    this.LoadDataById(tf.SelectedCustomerId);
            }
        }

        private void radButton3_Click(object sender, EventArgs e)
        {
            using (Forms.TraderForm tf = new Forms.TraderForm())
            {
                tf.CreateSuplier();
                tf.ShowDialog(this);
                if(tf.SelectedCustomerId != Guid.Empty)
                    this.LoadDataById(tf.SelectedCustomerId);
            }
        }
    }
}
