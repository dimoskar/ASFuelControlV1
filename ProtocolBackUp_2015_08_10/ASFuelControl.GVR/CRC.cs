using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ASFuelControl.GVR
{
    public static class CRC
    {
        public static byte[] crc(this byte[] target)
        {
            byte[] numArray = new byte[512]
      {
        (byte) 0,
        (byte) 0,
        (byte) 192,
        (byte) 193,
        (byte) 193,
        (byte) 129,
        (byte) 1,
        (byte) 64,
        (byte) 195,
        (byte) 1,
        (byte) 3,
        (byte) 192,
        (byte) 2,
        (byte) 128,
        (byte) 194,
        (byte) 65,
        (byte) 198,
        (byte) 1,
        (byte) 6,
        (byte) 192,
        (byte) 7,
        (byte) 128,
        (byte) 199,
        (byte) 65,
        (byte) 5,
        (byte) 0,
        (byte) 197,
        (byte) 193,
        (byte) 196,
        (byte) 129,
        (byte) 4,
        (byte) 64,
        (byte) 204,
        (byte) 1,
        (byte) 12,
        (byte) 192,
        (byte) 13,
        (byte) 128,
        (byte) 205,
        (byte) 65,
        (byte) 15,
        (byte) 0,
        (byte) 207,
        (byte) 193,
        (byte) 206,
        (byte) 129,
        (byte) 14,
        (byte) 64,
        (byte) 10,
        (byte) 0,
        (byte) 202,
        (byte) 193,
        (byte) 203,
        (byte) 129,
        (byte) 11,
        (byte) 64,
        (byte) 201,
        (byte) 1,
        (byte) 9,
        (byte) 192,
        (byte) 8,
        (byte) 128,
        (byte) 200,
        (byte) 65,
        (byte) 216,
        (byte) 1,
        (byte) 24,
        (byte) 192,
        (byte) 25,
        (byte) 128,
        (byte) 217,
        (byte) 65,
        (byte) 27,
        (byte) 0,
        (byte) 219,
        (byte) 193,
        (byte) 218,
        (byte) 129,
        (byte) 26,
        (byte) 64,
        (byte) 30,
        (byte) 0,
        (byte) 222,
        (byte) 193,
        (byte) 223,
        (byte) 129,
        (byte) 31,
        (byte) 64,
        (byte) 221,
        (byte) 1,
        (byte) 29,
        (byte) 192,
        (byte) 28,
        (byte) 128,
        (byte) 220,
        (byte) 65,
        (byte) 20,
        (byte) 0,
        (byte) 212,
        (byte) 193,
        (byte) 213,
        (byte) 129,
        (byte) 21,
        (byte) 64,
        (byte) 215,
        (byte) 1,
        (byte) 23,
        (byte) 192,
        (byte) 22,
        (byte) 128,
        (byte) 214,
        (byte) 65,
        (byte) 210,
        (byte) 1,
        (byte) 18,
        (byte) 192,
        (byte) 19,
        (byte) 128,
        (byte) 211,
        (byte) 65,
        (byte) 17,
        (byte) 0,
        (byte) 209,
        (byte) 193,
        (byte) 208,
        (byte) 129,
        (byte) 16,
        (byte) 64,
        (byte) 240,
        (byte) 1,
        (byte) 48,
        (byte) 192,
        (byte) 49,
        (byte) 128,
        (byte) 241,
        (byte) 65,
        (byte) 51,
        (byte) 0,
        (byte) 243,
        (byte) 193,
        (byte) 242,
        (byte) 129,
        (byte) 50,
        (byte) 64,
        (byte) 54,
        (byte) 0,
        (byte) 246,
        (byte) 193,
        (byte) 247,
        (byte) 129,
        (byte) 55,
        (byte) 64,
        (byte) 245,
        (byte) 1,
        (byte) 53,
        (byte) 192,
        (byte) 52,
        (byte) 128,
        (byte) 244,
        (byte) 65,
        (byte) 60,
        (byte) 0,
        (byte) 252,
        (byte) 193,
        (byte) 253,
        (byte) 129,
        (byte) 61,
        (byte) 64,
        byte.MaxValue,
        (byte) 1,
        (byte) 63,
        (byte) 192,
        (byte) 62,
        (byte) 128,
        (byte) 254,
        (byte) 65,
        (byte) 250,
        (byte) 1,
        (byte) 58,
        (byte) 192,
        (byte) 59,
        (byte) 128,
        (byte) 251,
        (byte) 65,
        (byte) 57,
        (byte) 0,
        (byte) 249,
        (byte) 193,
        (byte) 248,
        (byte) 129,
        (byte) 56,
        (byte) 64,
        (byte) 40,
        (byte) 0,
        (byte) 232,
        (byte) 193,
        (byte) 233,
        (byte) 129,
        (byte) 41,
        (byte) 64,
        (byte) 235,
        (byte) 1,
        (byte) 43,
        (byte) 192,
        (byte) 42,
        (byte) 128,
        (byte) 234,
        (byte) 65,
        (byte) 238,
        (byte) 1,
        (byte) 46,
        (byte) 192,
        (byte) 47,
        (byte) 128,
        (byte) 239,
        (byte) 65,
        (byte) 45,
        (byte) 0,
        (byte) 237,
        (byte) 193,
        (byte) 236,
        (byte) 129,
        (byte) 44,
        (byte) 64,
        (byte) 228,
        (byte) 1,
        (byte) 36,
        (byte) 192,
        (byte) 37,
        (byte) 128,
        (byte) 229,
        (byte) 65,
        (byte) 39,
        (byte) 0,
        (byte) 231,
        (byte) 193,
        (byte) 230,
        (byte) 129,
        (byte) 38,
        (byte) 64,
        (byte) 34,
        (byte) 0,
        (byte) 226,
        (byte) 193,
        (byte) 227,
        (byte) 129,
        (byte) 35,
        (byte) 64,
        (byte) 225,
        (byte) 1,
        (byte) 33,
        (byte) 192,
        (byte) 32,
        (byte) 128,
        (byte) 224,
        (byte) 65,
        (byte) 160,
        (byte) 1,
        (byte) 96,
        (byte) 192,
        (byte) 97,
        (byte) 128,
        (byte) 161,
        (byte) 65,
        (byte) 99,
        (byte) 0,
        (byte) 163,
        (byte) 193,
        (byte) 162,
        (byte) 129,
        (byte) 98,
        (byte) 64,
        (byte) 102,
        (byte) 0,
        (byte) 166,
        (byte) 193,
        (byte) 167,
        (byte) 129,
        (byte) 103,
        (byte) 64,
        (byte) 165,
        (byte) 1,
        (byte) 101,
        (byte) 192,
        (byte) 100,
        (byte) 128,
        (byte) 164,
        (byte) 65,
        (byte) 108,
        (byte) 0,
        (byte) 172,
        (byte) 193,
        (byte) 173,
        (byte) 129,
        (byte) 109,
        (byte) 64,
        (byte) 175,
        (byte) 1,
        (byte) 111,
        (byte) 192,
        (byte) 110,
        (byte) 128,
        (byte) 174,
        (byte) 65,
        (byte) 170,
        (byte) 1,
        (byte) 106,
        (byte) 192,
        (byte) 107,
        (byte) 128,
        (byte) 171,
        (byte) 65,
        (byte) 105,
        (byte) 0,
        (byte) 169,
        (byte) 193,
        (byte) 168,
        (byte) 129,
        (byte) 104,
        (byte) 64,
        (byte) 120,
        (byte) 0,
        (byte) 184,
        (byte) 193,
        (byte) 185,
        (byte) 129,
        (byte) 121,
        (byte) 64,
        (byte) 187,
        (byte) 1,
        (byte) 123,
        (byte) 192,
        (byte) 122,
        (byte) 128,
        (byte) 186,
        (byte) 65,
        (byte) 190,
        (byte) 1,
        (byte) 126,
        (byte) 192,
        (byte) 127,
        (byte) 128,
        (byte) 191,
        (byte) 65,
        (byte) 125,
        (byte) 0,
        (byte) 189,
        (byte) 193,
        (byte) 188,
        (byte) 129,
        (byte) 124,
        (byte) 64,
        (byte) 180,
        (byte) 1,
        (byte) 116,
        (byte) 192,
        (byte) 117,
        (byte) 128,
        (byte) 181,
        (byte) 65,
        (byte) 119,
        (byte) 0,
        (byte) 183,
        (byte) 193,
        (byte) 182,
        (byte) 129,
        (byte) 118,
        (byte) 64,
        (byte) 114,
        (byte) 0,
        (byte) 178,
        (byte) 193,
        (byte) 179,
        (byte) 129,
        (byte) 115,
        (byte) 64,
        (byte) 177,
        (byte) 1,
        (byte) 113,
        (byte) 192,
        (byte) 112,
        (byte) 128,
        (byte) 176,
        (byte) 65,
        (byte) 80,
        (byte) 0,
        (byte) 144,
        (byte) 193,
        (byte) 145,
        (byte) 129,
        (byte) 81,
        (byte) 64,
        (byte) 147,
        (byte) 1,
        (byte) 83,
        (byte) 192,
        (byte) 82,
        (byte) 128,
        (byte) 146,
        (byte) 65,
        (byte) 150,
        (byte) 1,
        (byte) 86,
        (byte) 192,
        (byte) 87,
        (byte) 128,
        (byte) 151,
        (byte) 65,
        (byte) 85,
        (byte) 0,
        (byte) 149,
        (byte) 193,
        (byte) 148,
        (byte) 129,
        (byte) 84,
        (byte) 64,
        (byte) 156,
        (byte) 1,
        (byte) 92,
        (byte) 192,
        (byte) 93,
        (byte) 128,
        (byte) 157,
        (byte) 65,
        (byte) 95,
        (byte) 0,
        (byte) 159,
        (byte) 193,
        (byte) 158,
        (byte) 129,
        (byte) 94,
        (byte) 64,
        (byte) 90,
        (byte) 0,
        (byte) 154,
        (byte) 193,
        (byte) 155,
        (byte) 129,
        (byte) 91,
        (byte) 64,
        (byte) 153,
        (byte) 1,
        (byte) 89,
        (byte) 192,
        (byte) 88,
        (byte) 128,
        (byte) 152,
        (byte) 65,
        (byte) 136,
        (byte) 1,
        (byte) 72,
        (byte) 192,
        (byte) 73,
        (byte) 128,
        (byte) 137,
        (byte) 65,
        (byte) 75,
        (byte) 0,
        (byte) 139,
        (byte) 193,
        (byte) 138,
        (byte) 129,
        (byte) 74,
        (byte) 64,
        (byte) 78,
        (byte) 0,
        (byte) 142,
        (byte) 193,
        (byte) 143,
        (byte) 129,
        (byte) 79,
        (byte) 64,
        (byte) 141,
        (byte) 1,
        (byte) 77,
        (byte) 192,
        (byte) 76,
        (byte) 128,
        (byte) 140,
        (byte) 65,
        (byte) 68,
        (byte) 0,
        (byte) 132,
        (byte) 193,
        (byte) 133,
        (byte) 129,
        (byte) 69,
        (byte) 64,
        (byte) 135,
        (byte) 1,
        (byte) 71,
        (byte) 192,
        (byte) 70,
        (byte) 128,
        (byte) 134,
        (byte) 65,
        (byte) 130,
        (byte) 1,
        (byte) 66,
        (byte) 192,
        (byte) 67,
        (byte) 128,
        (byte) 131,
        (byte) 65,
        (byte) 65,
        (byte) 0,
        (byte) 129,
        (byte) 193,
        (byte) 128,
        (byte) 129,
        (byte) 64,
        (byte) 64
      };
            int length = target.Length;
            byte num1 = (byte)1;
            byte num2 = (byte)1;
            byte num3 = (byte)0;
            byte num4 = num3;
            int index = 0;
            while (length > 0)
            {
                int num5 = 0;
                int num6 = (int)(byte)((uint)target[index] ^ (uint)num1) * 2;
                byte num7 = (byte)num6;
                int num8 = num6 > (int)byte.MaxValue ? 256 : 0;
                int num9 = (int)(byte)num5 + (int)num7;
                num4 = numArray[num8 + num9];
                num2 = (byte)((uint)numArray[num8 + num9 + 1] ^ (uint)num3);
                num1 = num2;
                num3 = num4;
                --length;
                ++index;
            }
            int num10 = (int)num4 & (int)sbyte.MaxValue;
            int num11 = (int)num2 & (int)sbyte.MaxValue;
            List<byte> list = new List<byte>();
            list.AddRange((IEnumerable<byte>)target);
            list.Add((byte)num10);
            list.Add((byte)num11);
            return list.ToArray();
        }

        public static bool checkcrc(this byte[] target)
        {
            byte[] numArray = CRC.crc(Enumerable.ToArray<byte>(Enumerable.Take<byte>((IEnumerable<byte>)target, target.Length - 2)));
            return (int)target[target.Length - 1] == (int)numArray[numArray.Length - 1] && (int)target[target.Length - 2] == (int)numArray[numArray.Length - 2];
        }
    }
}

