Word,Count
/,182
the,150
in,145
=,143
to,129
a,117
if,77
of,77
==,74
this,73
class,71
on,67
order,66
depending,66
partial,66
implement,66
properties,66
each,66
Please,66
provide,66
method,66
error,66
message,66
{,61
},60
</summary>,53
<summary>,53
string,48
up,46
localized,46
Looks,45
=>,45
similar,42
&&,27
return,24
null),20
+,20
-,19
!=,19
else,17
<param,15
0;,12
t.TankId,11
case,11
||,10
DateTime.Now;,10
be,10
continue;,10
or,10
<,9
decimal,9
\"\\,9
entity,8
new,8
as,8
(typeof(T),8
*,7
\this.AddSystemEventData(alarm,\,7
default(T);,7
public,7
var,7
Δεν,7
db.TankSaleViews.Where(t,7
setting,7
this.TankId).OrderByDescending(t,6
resource,6
<=,6
tank.FuelLevel;,6
tank.PreviousState,6
για,6
t.TransactionTimeStamp).FirstOrDefault();,6
({0}),6
return;,6
Καυσίμου,5
is,5
Δεξαμενής,5
TankSetting,5
foreach,5
assembly,5
by,5
qs.Sum(s,5
code,5
type,5
DatabaseModel,4
------------------------------------------------------------------------------,4
formatter);,4
10)//LEVELCORRECTION,4
this.database.SaveChanges();,4
this.TankSettings.Where(ts,4
βρέθηκε,4
il.TankFilling.TransactionTime,4
bool,4
with</param>,4
(setting,4
true;,4
get,4
την,4
set,4
disp.PumpSerialNumber;,4
tank.ReferenceLevel,4
value.ToString();,4
πωλήσεων,4
desc,4
tank.PhysicalState,4
DatabaseModel;,4
nSale.SaleTankStartValues[nf.TankId].CurrentTemperatur;,4
file,4
>=,4
ts.SettingKey,4
fileName,4
for,4
this.Add(entity);,3
lastSaleValues.TotalVolumes[lastNozzle.OrderId];//,3
Σφραγγίδα,3
this.SaveChanges();,3
an,3
dt,3
nSale.TotalVolumeStart;,3
balance.TimeEnd,3
and,3
was,3
you,3
Implementation.ErrorInfoStateEnum.Error);,3
tankId).OrderBy(t,3
void,3
είναι,3
\this.DeserializeItem(fileName,\,3
foreach(string,3
values,3
tank,3
object,3
alarm,3
:,3
fileNames),3
1),3
DatabaseModel.GetContext(this),3
Data.TankLevelEndView,3
database.TankLevelEndViews.Where(t,3
This,3
db,3
qsd.Sum(s,3
t.TansDate,3
{0}.,3
this.MinFuelHeight,3
Guid.Empty),3
Version,3
currentVolume,3
s.VolumeNormalized);,3
nSale.TotalVolume;,3
alert,3
System.Drawing.Bitmap,3
following,3
null;,3
(int)Common.Enumerators.TankStatusEnum.Idle,3
nSale.SaleTankEndValues[nf.TankId].FuelHeight;,3
nSale.TotalVolumeEnd;,3
decrypt,2
DateTime.Now.Subtract(this.ReferenceLevelResetDate).TotalSeconds,2
\192,\,2
AlertAddedEventArgs(alarm));,2
lost,2
newDensity1,2
\name="\HashAlgorithm"\>Can\,2
TankSetting();,2
Invoice,2
DateTime,2
filling.VolumeNormalized);,2
typeof(ASFuelControl.Data.NozzleUsagePeriod)),2
\sale.TemperatureEnd,\,2
0),2
attribute,2
all,2
s.TotalizerEnd,2
this.StateIdleDateTime,2
balance.TimeStart,2
στους,2
alarm.Message,2
(l2.Height.Value,2
Invoice;,2
Αριθμός,2
(alertIsOn),2
this.TankId;,2
\name="\KeySize"\>Can\,2
\name="\PasswordIterations"\>Number\,2
1;,2
q,2
Στάθμη,2
(prop.PropertyType.IsArray),2
filling.TransactionTime);,2
directoryName,2
DateTime.Parse(setting.SettingValue);,2
\name="\Salt"\>Salt\,2
\name="\Password"\>Password\,2
Κατασκευαστή,2
your,2
\this.AlertAdded(this,\,2
Θερμοκρασία,2
(inv.InvoiceTypeId,2
Guid.NewGuid();,2
(object,2
newPrice;,2
MD5</param>,2
ASCII,2
alert;,2
16,2
encrypt,2
DateTime.MinValue;,2
e.AlertDefinitionId,2
(SystemEvent,2
στάθμη,2
q),2
</auto-generated>,2
περιόδου,2
Revision,2
(inv,2
Changes,2
lastNozzle.NozzleState,2
this.TimeFrom,2
\lastNozzle.FuelType.NormalizeVolume(sale.Volume,\,2
typeof(Invoice)),2
regenerated,2
typeof(ASFuelControl.Data.TankFilling)),2
Προηγούμενη,2
either,2
currentPrice,2
inv,2
<auto-generated>,2
(lastNozzle.NozzleState,2
Προηγούμενος,2
sv.ResolvedDate,2
ύψος,2
\hasConnection,\,2
newDensity;,2
args.Changes),2
this.TankSettings.Add(setting);,2
(int)Common.Enumerators.NozzleStateEnum.Normal),2
Νερού,2
this.statisticalHeightError,2
\this.Duration,\,2
μη,2
(this.AlertAdded,2
may,2
\this.AlertResolved(this,\,2
cause,2
\name="\InitialVector"\>Needs\,2
SystemEvent,2
\"\ReferenceLevelResetDate"\).FirstOrDefault();\,2
s.TotalizerStart);,2
alert.AlertDefinitionId;,2
256</param>,2
tank.GetTankVolume(tdb.GetLastValidLevel());//,2
tank.MinFuelHeight,2
15ο,2
endLevel.Level.Value;,2
deliveryType,2
int,2
Σειραικός,2
will,2
(alert.AlertEnumValue.HasValue),2
TankPrice,2
(this.AlertResolved,2
F_2244D,2
this.PreviousState,2
typeof(ASFuelControl.Data.SalesTransaction)),2
(!alert.AutoResolve),2
string</returns>,2
0)));,2
alarm.AlertDefinition,2
alarm.SentDate,2
\TimeSpan(0,\,2
t.TansDate).LastOrDefault();,2
2,2
(currentVolume,2
άνοιγμα,2
(tank.PhysicalState,2
typeof(ASFuelControl.Data.TankUsagePeriod)),2
AlertAddedEventArgs(sv));,2
Η,2
όγκος,2
alert.AlerttMessage;,2
generated,2
q1,2
db.Add(setting);,2
ft.FuelTypeId,2
alertIsOn,2
alarm.AlertDefinitionId,2
q1),2
\128,\,2
(filling.VolumeNormalized,2
setting.SettingValue,2
ftpc.SumTotalOutTotalizerNormalized,2
setting.SettingKey,2
iterations,2
this.ClearChanges();,2
\this.EvaluateAlertCondition(alert,\,2
Build,2
not,2
τιμή,2
alarm.EventType,2
nSale.SaleTankEndValues[nf.TankId].CurrentTemperatur;,2
with,2
COM,2
καυσίμου,2
C,2
tool,2
2);,2
(endLevel,2
να,2
information,2
alert.AlertDefinitionId,2
(e.PropertyName,2
il.Invoice.InvoiceTypeId,2
densityAvg,2
that,2
endLevel,2
(int)Common.Enumerators.NozzleStateEnum.LiterCheck),2
SHA1,2
l1.Height.Value);,2
long</param>,2
(inv.InvoiceType.TransactionType,2
currentDensity,2
(!ASFuelControl.Data.Implementation.OptionHandler.Instance.IsFinalized),2
database.AlertDefinitions.Where(a,2
\"\ReferenceLevelDate"\).FirstOrDefault();\,2
tank.GetTankVolume(tank.LastFuelHeight);,2
alarm.EventDate,2
Τύπος,2
sale.VolumeNormalized,2
database.CreateEntity<SystemEvent>();,2
sv,2
BackendConfiguration,2
>,2
\(this.CheckIfAlertAlreadyExists(alert,\,2
επιτρεπόμενο,2
newValue,2
alert.SystemEvents.Where(e,2
εκπληρωμένων,2
alert.AlertEnumValue.Value;,2
project,2
do</param>,2
setting.TankId,2
behavior,2
characters,2
Όγκος,2
ComVisible,2
nSale.SaleTankStartValues[nf.TankId].FuelHeight;,2
ResGen,2
incorrect,2
setting.TankSettingId,2
bool[],2
can,2
δεξαμενή,2
tank.ReferenceLevelDate,2
il.FuelTypeId,2
using,2
//ValidTemp,1
InvoiceLine,1
TimeSpan,1
sw.Stop();,1
Implementation.ErrorInfo();,1
(leveEnd,1
tank);,1
sysEvent.Nozzle.TotalCounter,1
tank.TankId,1
associated,1
\member,\,1
!s.ResolvedDate.HasValue));,1
tup,1
'*',1
tankPrice.Price,1
DatabaseModel.</param>,1
startLevel,1
Common.Enumerators.TankStatusEnum.FuelExtraction,1
F_2244B,1
StronglyTypedResourceBuilder,1
like,1
invoice.Trader.InvoiceTypeId.Value,1
sysEvent.Tank.PeriodMinimum,1
inl.TankFillingId.Value,1
qFill.SelectMany(tf,1
Εκτυπωτής,1
ftpc.SumTotalOutTotalizer,1
μετρητών,1
\COM,\,1
!a.IsGeneric);,1
this.Nozzles.Where(n,1
entity;,1
invoice.Number,1
\{0}\r\n"\,\,1
General,1
\error.AddErrorInfo(Properties.Resources.TankFillingValidator_TankUsagePriodNotFound,\,1
Numbers,1
ftpc.TotalizerEnd,1
UsagePeriod,1
(this.ReferenceLevelDate,1
CurrentUICulture,1
log.AdditionalDescription,1
ftpc.SumTotalOutNormalized,1
\elapsedTime,\,1
Ελεγκτής,1
tf.UsagePeriod,1
decimal.Round(invLine.TotalPrice,1
ASFuelControl.Data,1
\if(fileName.EndsWith("\.delete"\))\,1
totalVol);,1
Μηχανιοσμός,1
//LEVELCORRECTION,1
scope.Transaction.Commit();,1
nozzleId,1
need,1
tank),1
currentPriceRecord,1
Minor,1
\"\CurrentVolume"\,\,1
Major,1
TankSetting;,1
τύπο,1
encrypted</param>,1
System.Diagnostics.Stopwatch.StartNew();,1
controlled,1
currentPrice;,1
this.GetLastValidLevel();,1
\"\TankSetting"\)\,1
Extraction,1
startLevel.Level.Value;,1
Πληκτρολόγιο,1
volume,1
Common.Enumerators.TankStatusEnum.BalanceAlert:,1
invType.LastNumber,1
nSale.TotalVolumeEnd),1
t.TansDate).FirstOrDefault();,1
\"\MaxFuelHeight"\,\,1
previousDensity,1
this.Database.CreateEntity<TankPrice>();,1
(int)Common.Enumerators.TankStatusEnum.Filling,1
this.GetScope();,1
tankPrice.ChangeDate,1
!il.TankFillingId.HasValue);,1
period.PeriodEnd,1
Common.Enumerators.TankStatusEnum.HighLevel:,1
Minutes,1
αλλαγές..,1
this.ReferenceLevelResetDate,1
currentSale.TotalizerStart;,1
\class,\,1
db.InvoiceTypes.Where(it,1
σωστή,1
δημιουργηθεί,1
tank.GetTankVolume(data.Values.FuelHeight);,1
specify,1
previousDensity;,1
F_2232_VOL,1
F_2243,1
\strings,\,1
(!System.IO.Directory.Exists(directoryName)),1
il.Invoice.InvoiceType.TransactionType,1
expression.Parameters[parameter.Name],1
tankPrice;,1
(viewsCount,1
Μέγιστο,1
\currentSale.UnitPrice,\,1
this.Database.InvoiceLines.Where(inl,1
Version:4.0.30319.42000,1
foreach(Data.AlertDefinition,1
e.TankId,1
current,1
\"\PhysicalState"\\,1
\fileName,\,1
tp.ChangeDate).Take(1).FirstOrDefault();,1
\"\InvoiceId"\\,1
\"\ReferenceLevelResetDate"\;\,1
Common.Enumerators.TankStatusEnum.WaitingEllapsed,1
\"\CurrentTankWaterLevel"\,\,1
tf.LevelStart,1
\AssemblyVersion("\1.0.*"\)]\,1
invType,1
it.InvoiceTypeId,1
tank.MinFuelHeight);,1
μπόρεσε,1
lastNozzle.NozzleFlows.Where(n=>n.FlowState,1
currentSale.TotalPrice,1
System.IO.File.AppendAllText(System.Environment.CurrentDirectory,1
ReferenceLevelResetDate,1
shown,1
Αντλία,1
currentSale.TotalVolume,1
lastSale;,1
Description,1
πώληση,1
VS,1
(levelStart,1
F_2239A,1
Common.Enumerators.TankStatusEnum.Offline,1
decreasing,1
έπρεπε,1
db.SalesTransactions.Where(s=>s.TankSales.Select(t=>t.Tank).Contains(this)).OrderByDescending(s=>s.TransactionTimeStamp).SelectMany(s=>s.TankSales).Take(salesCount),1
invoice.Trader.InvoiceTypeId.Value;,1
ftpc.TotalOutNormalized,1
s.Volume),1
F_2237,1
{0:dd/MM/yy,1
ανοιχτή,1
Common.Enumerators.TankStatusEnum.Idle,1
modify,1
της,1
\string.Format(Properties.Resources.UsagePeriod_PerioNotFound,\,1
(tabName,1
s.Volume);//,1
if(entity.GetType(),1
Συνολικός,1
DatabaseModel.GetContext(nozzle),1
currentPriceRecord.Price;,1
auto-generated,1
(this.PhysicalState,1
Δεξαμενή,1
default,1
εγγραφής,1
qInvFillings,1
sale.TotalPrice,1
makes,1
tank)),1
tf.TransactionTimeEnd,1
F_2234_VOL,1
ftpc.TotalizerStart;,1
Number,1
database.InvoiceLines.Where(il,1
AlertUnlocked,1
method.MakeGenericMethod(entity.GetType());,1
({0}).,1
setting.SettingKey;,1
lastSale,1
nozzle.AlertValidIndex++;,1
\if(fileName.EndsWith("\.insert"\))\,1
tankPrice.TankId,1
ftpc.TotalOut,1
database.TankFillings.Where(tf,1
currentSale.TotalizerStart,1
invL.Invoice,1
entity.GetType().Name;,1
viewsCount,1
tank.PeriodMaximum,1
//F_2244B,1
this.AlarmDelayTime;,1
F_2234_TEMP,1
System.Diagnostics.Stopwatch,1
)),1
Ηλεκτρονικών,1
δεν,1
\"\CurrentTemperature"\,\,1
foreach(Tank,1
Common.Enumerators.TankStatusEnum.Error:,1
this.GetTankVolume(endParameters.FuelHeight,1
System.IO.Directory.CreateDirectory(directoryName);,1
<returns>A,1
scope,1
tf.Tank.FuelTypeId,1
tankPrice.TankPriceId;,1
DateTime.Now),1
types,1
\option,\,1
ResourceManager,1
(il.Invoice.InvoiceTypeId,1
Ογκομετρητή,1
*********,1
handles,1
\"\ReferenceLevelDate"\;\,1
(,1
F_2244C,1
invoice.InvoiceTypeId).FirstOrDefault();,1
qFill,1
se.TankId).FirstOrDefault();,1
consists,1
filling.TankFillingId).FirstOrDefault();,1
\"\\\ThreadController.txt"\,\,1
H,1
//F_2244C,1
=2,1
(!scope.Transaction.IsActive),1
If,1
Implementation.OptionHandler.Instance.CheckFillingStart,1
F_2236B1,1
filling.TankId;,1
(tankPrice,1
\System.IO.File.AppendAllText("\Tank.log"\,\,1
You,1
this.TimeFrom.Date.Add(value.TimeOfDay.Subtract(new,1
F_2242,1
(int)Common.Enumerators.TankStatusEnum.WaitingEllapsed,1
tank.WaterLevel);,1
\this.Database.GetCurrentTankUsagePeriod(filling.Tank,\,1
tank.PeriodMinimum,1
then,1
ποσότητα,1
(tank,1
filling.TankPrice.Price,1
this.TimeFrom.Date.Add(ts.Subtract(new,1
\if(fileName.EndsWith("\.update"\))\,1
};,1
Σύνολο,1
////ValidLevel,1
e.PersistentObject,1
this.database.SystemEvents.Where(s,1
generation,1
Implementation.OptionHandler.Instance.CheckFillingEnd,1
\string.Format("\\n{1}\,1
<returns>An,1
currentSale.TotalizerEnd,1
IObjectScope,1
usagePeriod,1
F_22310,1
access,1
tank;,1
//F_2245B,1
Common.Enumerators.TankStatusEnum.LowLevel:,1
values);,1
visible,1
rerun,1
sale,1
newPrice,1
F_2245B,1
\"\CurrentTankLevel"\,\,1
30),1
\"\TotalVolume"\,\,1
filling.TransactionTime).OrderByDescending(tp,1
Common.Enumerators.TankStatusEnum.FuelExtractionInit),1
Αντλίας,1
true,1
ReferenceLevel,1
currentPriceRecord.FuelDensity;,1
F_2238,1
previousValue,1
this.TankNumber.ToString();,1
επιλεμένο,1
//ValidWater,1
SetReferenceValues(),1
densities.Sum(),1
\string.Format("\StateIdleDateTime\,1
Check,1
F_2232_MM,1
s.Volume);,1
this.StateIdleDateTime));,1
elapsedTime,1
tf.TransactionTime,1
filling.TransactionTime;,1
DateTime.Now.AddMinutes(2);,1
filling.UsagePeriodId,1
Πώληση,1
χρήση,1
Ισοζυγίου,1
thread's,1
newDensity,1
\Selling,\,1
F_2232_TEMP,1
ftpc.TotalLiterCheck;,1
after,1
nSale.NozzleId,1
\System.IO.File.AppendAllText("\Data.log"\,\,1
στόμιο,1
\"\\\"\\,1
lastSaleValues.CurrentSalePrice;,1
F_2233,1
leveEnd,1
Τρέχων,1
four,1
completed,1
(!alert.IsStationAlert),1
ContextGenerator.ttinclude,1
messageText,1
sw.Elapsed;,1
tank.FuelLevel);,1
Delivery,1
\name="\config"\>The\,1
Ισοζύγιο,1
F_2236A2,1
Ημερομηνία,1
//Prevent,1
ReferenceLevelDate,1
dt2;,1
values)),1
The,1
this.database.Tanks.Where(t,1
lastNozzle.NozzleId;//,1
F_2244A,1
F_2235,1
tank.MaxFuelHeight);,1
Υπολογιστής,1
Common.Enumerators.TankStatusEnum.FillingInit,1
remove,1
*************//,1
F_2234_MM,1
rebuild,1
tank.ReferenceLevelResetDate,1
add,1
litercheck,1
encrypted,1
sale.NozzleId,1
F_2244F,1
through,1
F_2245A,1
property,1
Common.Enumerators.TankStatusEnum.HighWaterLevel:,1
//this.LastNozzleUsed,1
Common.Enumerators.TankStatusEnum.LevelIncrease:,1
Common.Enumerators.TankStatusEnum.FillingInit:,1
(Data.AlertDefinition,1
F_2244E,1
\this.database.Refresh(Telerik.OpenAccess.RefreshMode.OverwriteChangesFromStore,\,1
via,1
\this.tablesToLog.Add("\TankSetting"\);\,1
καταχώρηση,1
\"\.delete"\;\,1
fileNames.Add(fileName);,1
this.ReferenceLevelDate,1
ανεγαγμένη,1
Fuel,1
if(!scope.Transaction.IsManaged),1
EvaluateAlert(Data.Tank,1
a.IsStationAlert);,1
Tank,1
(height,1
Ποντίκι,1
alarm.TankId,1
invoice.InvoiceTypeId),1
authorized),1
dd/MM/yyyy}..,1
typed,1
filling.Tank.CurrentVolume;,1
\"\FuelLevelBase"\)\,1
Runtime,1
value));,1
κάνετε.,1
deletes),1
ft.FuelTypeId).ToList();,1
values:,1
τιμής,1
false,1
Common.Enumerators.TankStatusEnum.FuelExtractionInit:,1
raising,1
inl.TankFillingId.HasValue,1
nSale.TotalPrice;,1
balance.TimeStart);,1
typelib,1
(currentPriceRecord,1
prev;,1
encryption,1
{0:ddd,1
!e.ResolvedDate.HasValue);,1
Μέγιστη,1
densityAvg);,1
\(System.IO.File.Exists("\Tank.log"\))\,1
tf.InvoiceLines).Where(il,1
foreach(object,1
\"\Δεξαμενή\,1
up;,1
tank.SystemEvents.Add(alarm);,1
previousLevel.Height.Value;,1
customize,1
this.GetLastSale();,1
έγιναν,1
Implementation.OptionHandler.Instance.CheckFillingCancel,1
strongly,1
10),1
Implementation.OptionHandler.Instance.CheckFillinInvoices,1
//,1
System.IO.File.Delete(fileName);,1
decrypted</param>,1
Overrides,1
decimal.Round(currentSale.TotalVolume,1
\name="\PlainText"\>Text\,1
\error.AddErrorInfo(Properties.Resources.TankFillingValidator_TankPriceCreationFailed,\,1
(totalVol,1
tankPrice,1
Guid.NewGuid().ToString(),1
(invoice.Trader.InvoiceTypeId.HasValue,1
(int)Common.Enumerators.TankStatusEnum.FuelExtraction,1
invoiceLIne.FuelDensity),1
this.database.CreateEntity<Data.Balance>();,1
tank.AlarmDelayTime),1
looking,1
!e.ResolvedDate.HasValue).ToList();,1
χρήσης,1
F_2236B2,1
qInvOther,1
\"\Deletes\\"\\,1
DateTime.Now.Subtract(tank.ReferenceLevelResetDate).TotalSeconds,1
999999;,1
το,1
1).Select(t=>t.Tank)),1
densities.Count;,1
authorized,1
etc,1
\string.Format("\MinimumSetTime\,1
υπάρχει,1
\(System.IO.File.Exists("\Data.log"\))\,1
Ακροσωλήνιο,1
attributes,1
(usagePeriod,1
συνολικός,1
Οθόνη,1
F_2245C,1
F_2236A1,1
Common.Enumerators.TankStatusEnum.Waiting:,1
returned,1
startParameters.FuelHeight);,1
Visual,1
1,1
//F_2244F,1
tank.GetTankVolume(tank.FuelLevel));,1
(invL.Invoice.InvoiceType.TransactionType,1
DeviceSetting_CommunicationController_DeviceSerialNumber,1
με,1
(tf.LevelEnd,1
values.ActiveNozzle).FirstOrDefault().NozzleId;,1
components,1
!a.AlertIsDisabled,1
Encrypts,1
currentDensity;,1
this.SalesTransactions,1
filling.Tank.TankPrices.Where(tp=>tp.ChangeDate,1
this.FuelLevel;,1
generic,1
(entity.GetType(),1
edit,1
strongly-typed,1
decrypted,1
Decrypts,1
System.DateTime.Now));,1
Allows,1
lookups,1
(!alert.IsTankAlert),1
sale.SalesPrice,1
this.Database.GetUsagePeriod(filling.TransactionTime);,1
filling.TankPrice,1
0,1
\vatMult,\,1
//Update,1
tank.TotalVolume);,1
διαφορας,1
TankSaleView,1
this.TankId).Count();,1
tankPrice.FuelDensity,1
tankPrice.TankFillings.Add(filling);,1
endParameters.CurrentTemperatur);,1
ftpc.SumTotalOut,1
send,1
\"\MinFuelHeight"\,\,1
Common.Enumerators.TankStatusEnum.Waiting,1
filling.TankPriceId,1
Αναγωγή,1
To,1
scope.Transaction.Begin();,1
Information,1
disp..CurrentValue;,1
(tup,1
this.Delete(entity);,1
cached,1
tf.LevelEnd,1
exposed,1
this.CheckUsagePeriod();,1
previousValue;,1
GUID,1
A,1
(nSale.TotalVolumeStart,1
Φορολογικός,1
currentSale.TotalVolume),1
(currentSale.TotalizerEnd,1
Ογκος,1
(filling.TankId,1
//F_2245A,1
{0:N2},1
tank.IsLiterCheck,1
these,1
(int)Common.Enumerators.TankStatusEnum.Selling,1
instance,1
sysEvent.Tank.PeriodMaximum,1
used,1
sw,1
=1,1
invoice.TotalAmount,1
usagePeriod.UsagePeriodId;,1
Ελάχιστο,1
alarm.Tank,1
increasing,1
(nozzle.AlertValidIndex,1
επιτρεπόμενη,1
.ResX,1
Common.Enumerators.TankStatusEnum.Offline:,1
invoiceLIne.UnitPrice),1
(tf.LevelStart,1
Utility,1
Common.Enumerators.TankStatusEnum.Filling,1
τον,1
currentSale.TotalPrice;,1
F_2239B,1
\this.SerializeItem(entity,\,1
//F_2244E,1
περίοδος,1
(filling.TankPrice,1
about,1
\name="\CipherText"\>Text\,1
false;,1
filling.TankPrice.FuelDensity,1
from,1
tank.GetTankVolumeNormalized(data.Values.FuelHeight);,1
3),1
args.PropertyName,1
invoiceLIne,1
levelStart,1
\{0}"\,\,1
invoice.InvoiceTypeId,1
Common.Enumerators.TankStatusEnum.LevelDecrease:,1
\db.NormalizeVolume(tf.Volume,\,1
Change,1
\HH:mm:ss}\r\n"\,\,1
EvaluateAlert(bool,1
κλειδωμένη,1
this.ReferenceLevel,1
tank.TankId;,1
που,1
tank.Temperatire);,1
ID,1
height,1
MethodInfo,1
below:,1
Κάρτα,1
(startLevel,1
\error.AddErrorInfo(messageText,\,1
Studio,1
literCheckType,1
TankUsagePeriod,1
Returns,1
Setting,1
[assembly:,1
/str,1
n.OrderId,1
while,1
θα,1
