<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>26, 12</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoHAAAFgAAACgAAAAwAAAAYAAAAAEAGAAAAAAAgBwAAAAAAAAAAAAAAAAAAAAA
        AADW09zV0dbZ0dHd1tPY19PP09TG0tjI1NrN1dXY1szn2cPu1LbixabZu57PtKDErZ3Es57Ft6HKvKnR
        w7HVy7na0cPe1snd2M/a18/X1NDR0tDS0dPR1dbR1NjM0tfL0NPR09TR0dHS0tLW1tbW1tbS0tLT09PX
        19fU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTT09nX1trZ19fX09LW08/Y1dHX2Nba2dXb1s3Iv7G3ppGs
        ln2mkXawmoHBq5nKuKfKva3Ivq3JvrDKv7HIwLPIv7XFwbbFv7jLycHT0Mza2dXd29rV19fS1NTU1tfW
        2NnW1tbZ2dnY2NjU1NTS0tLU1NTV1dXT09PU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTQ1NXT19jS1dnT
        0tTY1dHi18/h0cHexrK0nYeokXufjnutno7DtqbSx7nc0L7d0sTg2s/e2NHd19Dc1s/Z1s7X1MzW08vV
        0srJxcDLx8LMycTRzsnV0s7X1NDX1NDX09LOz83R0dHT09PS0tLS0tLU1NTV1dXV1dXU1NTU1NTU1NTU
        1NTU1NTU1NTU1NTU1NTQ1dTN0dLM0dTW1dfi2dXiz8DUtpvCnXu2kW+/oYbHtaTSycDc2dTf3dXb2MrZ
        08bU08/T09PT1NLU1dPW1NPW1NPV1NDV1NDZ1tHSz8rMycHLyMDTzcbZ08zc187a18/Z19bT09PU1NTZ
        2dnX19fQ0NDQ0NDV1dXU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTR1tXM0dDQ0tPc2Nff0cXOtaG8l3Wv
        hWC4k3HVuqDh08fX1NDP0dLL0M/T1Mra29HS19bR1tnS1tfT19jU1tfU1tfV1tTV1tTY19Pa19PY1dDT
        z8rPycLOyMHTzsXX1MzW1NPU1NTT09PT09PS0tLS0tLU1NTW1tbU1NTU1NTU1NTU1NTU1NTU1NTU1NTU
        1NTT1dbX1dXe2NPg0sbMt6K0l3ysjWy0lXbawafr2cjm39bX1dTS1tfQ1NXP087W19PP09TP0tbP0tbP
        0tbP09TO0tPQ0tLP0dHR0tDU1dPY19PX1tLV0s7PzMjJxsHGw7/Q0c/Z2dna2trR0dHQ0NDZ2dna2trS
        0tLU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTW0drf1tnn18vXv6u5nX+mimuym4HIt6Le1snb2NDOzcnM
        zcvb29vX19fIysvKzM3Lzc3Lzc3Mzs7Nz8/Nz8/Nz8/Nz8/Nz8/O0NDMzs7Mzs7P0dHT1dXQ0tLHycm+
        wMC1tbW/v7/MzMzW1tba2trY2NjT09POzs7U1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTXz9ri1dfmz8DN
        sJWvj2yojWu7rZbSz8HP083T2djS2NPW19PPzsqhn59zdHhubnRqbGxsbWtsbWtsbWtsbGxra2toampn
        aWlna2xpbW5pbHBoa29lam1ma25qb3Jwc3dbXV1kZGSKiorBwcHZ2dnPz8/Nzc3a2trU1NTU1NTU1NTU
        1NTU1NTU1NTU1NTU1NTT1dXg2dDly620kGy5l3Osj3TZyb3b0s/Y1tXQ0tPO09bP1dyss7wwMjwnIiQe
        GRsbHCAWGh8WGh8UGB0YHCEXGyAZHCEVGB0XGSEXGSEXGSEXGSEZGCEZGCEZGCEZGR8REhYrKiwqKCeq
        paLg3NfW0Mva1tHa1tXU0tLT0tTQ09fT1NjR09TU0dPV09La1tXS0tLd1MvSuJqzj2u1lXLApYvdzsXe
        1tbX1dTQ0tPP09TM0NWhqLEjJS8cGRsaFRcbHiIUGB0VGR4XGyAXGh8WGR4YGyAXGh8YGyAYGyAaGSIa
        GSIaGSIaGSIaGSIaGiAiIycWFRcuLCuTjovFwbzh29TSzsnX1NDW1NPU09XS1NXT1NjU09XW09XW1NPY
        1NPU08/Yz8K6ooSwjmqzlHXYvajf1Mzc2NfX1dXV1dXR1dbL0NOcoqkcHycaFhsdFxwZHCATFxwXGh8b
        HiMTFhsWGR4bHiMXGh8XGh8XGh8ZGR8ZGR8ZGR8ZGR8ZGR8ZGR8aGx8ODQ8/PT2ppKGxq6bCurPe2NHb
        19LZ1dTW09XQ0tPR0tbU09XV1NbX1dTW1NPZ1s7UybuymXmtjWq3m33jzbve1dHW09XU1dPV1tTU19XN
        0dKfo6gdICgbGh4eHSEcHSEWGR4XGh8XGh8SFRo5PEFXWl5XWl5eX2NeX2NeX2NeX2NeX2NeX2NeX2Ne
        X2NkZWlvbnCSkJDY09DGwLmtpp3DvLPc1s/Z1NHX0tPR0dHQz9HS0dPV1NbY1tbW1NTe2MvOwK2ymXmr
        jWrCp43k0cLa1dTP0NTS0tLS09HU1dHO0NCgpageISkZGh4cGx8UFxwWGR4VGBwYGx8mKS2JjJDU1dnc
        3eHV19jV19jV19jV19jX1tjX1tjX19fX1tjIzM3Nz9DY1tXW0s3i2tPRyL+gl43MxbzZ08zZ1tLW1NPS
        0tLR0NLU09XW1NTV09Pf18bFt6GymXerj23Ispni1MjX1dXP0tfS1NTU1dHX19HR0s6hpqcfIygVGB0X
        Fx0cHyQeISYYGx8QExcWFxuIiY3U1tfP0dLQ0tPQ0tPS0tLS0tLS09HS09HS09HS0tLX2t7T1NjW1NPT
        z8re1czl29HGvbCtpJrRycLW0c7c2NfY1tbS0dPT0tTT09PS0tLi2MbCsputlHSwk3TLtqHk18/S0dXR
        1NzT1dXY2NLZ2tHU1M6gpaYeIicVGCAXGSEVFhoZGh4bHCAcHSEeHyOTlJjb3d7O0NHW1tbW1tbW19XW
        19XW19XW19XW19PW19XO0dXOz9PT0dDl4dza0cjc0sju4tato5m6sajKxL/Z1tLa2NjU1NTT0tTU09XT
        0tTn3MjCspurkG60mHnKtKLk2NLMzdHQ1t3Q0tLW1tDa2NDU0cyeoqMbHyQWGCAaHCQaGx8XGBwWFxsa
        Gx8YGhuPkZLY2tvNz9DU1NTU1NTU1dPU1dPU1dHU1dHU1dHS1dPO0dXQ09fY1tXV0czi2c/h2Mvaz8HY
        z8KjmpC7ta7Uz8zb1tfU1NTU09XV1NbW1dff1szEsqGykHK5lnXSv6Tj2szZ19fT0NnV1NjT0tbS2NfO
        09SioKYhHyUaHB0WGhsbGyEYFyAYGB4XFx0dHiKQkZXS1NTU1tbU1NTU1NTT09PT09PT09PT09PU09XQ
        09fK0drO09bb1crf1sjZ1dDV1NbN0tvU09fGuq6nknzgy7Ds28bZ1MvT1dXR1dbO09bd18zJuaiykHO4
        lXTUwKff1sjY1tbU0tjV1NjT0tTS2NfO09SioKYhHyUYHB0WGhsSFRoaGSIbGyEYGB4aGx+UlZnT1dXS
        1NTW1tbW1tbV1dXV1dXV1dXV1dXW1dfU1dnM1NvS1dne2s/i2s3a1tHT0tTK0NfP0NTUyL66ppTAqpHo
        1cDb1crZ2NTO0tPP1Nfa1czSw7OwkHO0k3LTwqjb1MXX1dXV09nX09jV0tTS2dbO1NOioKYhHyUYGx8W
        GR0WGR4cGyQYGB4YGB4UFRmQkZXP0dHT1dXS0tLS0tLS0tLR0dHR0dHS0tLS0dPQ0dXJz9TN0dLX1Mza
        08rU0czS0dPQ1NnX2Nzh2M/Ovq2lk3zQvajh2MrZ1dDS1NTP1NfY1c3Yy72wknexj3HQwafa08TY1tXV
        1NjX1NbV09PS2dbO1NOioKYhHyUYGx8WGR0XGh8XFh8TExkgICYdHiKTlJjQ0tLa3NzV1dXV1dXV1dXU
        1NTU1NTV1dXV1NbV1NbS1dnW1dfa19La1tHZ1tLV1dXS1drU1dni3NfazsKtmoWwnYji1MLY0cja29nO
        09bW1dHa0Ma3mYCsjG/JuqDc1cbb19bW0tfZ1NXV09LT2dTO1dKgoaUfHyUXHB0VGh0WGR4YFyAWFhwd
        HSMdHiKRkpbKzMzKzMzU1NTU1NTU1NTT09PT09PU1NTU09XU09XQ0NDQ0NDU0tHX1dTX2NbX19fQ1NXP
        0dLW1NPf2M/Cs6Ckj3nLu6Tg08Xb2djP0tfU1dPd1MvGqpKpi3C6rZPZ1MXa19PW09XZ1dTX1NDT2tPP
        1NKgoqMfHyUXHB0VGh0XGh8bGiMbGyERERcaGx+Vlprc3t7X2dnV1dXU1NTU1NTU1NTU1NTU1NTU09XX
        1Nbe3Nva2NjU09XP0NTR0dHT09PR1dbR1dbLzc3g3NfTx7WxnYSxnIHj0r/Y1dHQ09jQ1dTc1s/awKiq
        jXKrnoTW0cLX1NDW09XZ1dTX1NDT2tPP1NKgoqMfHyUVHR0TGh0XGh8UExwfHyUUFBogISWEhYnNz8/P
        0dHU1NTU1NTT09PT09PT09PT09PU09XW1NTUz8zW0tHU1dnS1drR09TS0tLR09PR1dbM0dTW19Xc0sHC
        rpWnj3HTvqjZ1NHQ09jP1NPe2NHnz7eqj3Sgk3nSzrzU0c3X1dXa1dLX1M/V2dPP1NKgoqMfHyUVHR0T
        Gh0eISYODRYiIigbGyETFBg8PUFsbm5sbm5vb29vb29vb29ubm5ubm5vb29vbnBxb294cW6Qi4qsr7TH
        ytLV19jX19fS1dPP1NPT2d7Lzc3j2cjJtZytlHS9ppDg2tXQ0NbK0NfY2Nji18m+rJWijXLItp/m3dPT
        0dDP09jT1t7R09PS0M+opaEhISEZHSIUGSISFRoYGB4aGiAaGiAaGiAVFRsZGR8aGiAZGR8ZGR8ZGR8Z
        GR8ZGR8ZGR8ZGR8ZGR8WGh8YHCFiZWnFyM3O0tfX1trc1s/Xz8jX1dXMzdHS1dnOyMOsl3yylnfbybLn
        2MXP09jZ19fe1cfNvKekkHezoo3i2czV0s7N0NTR1drS1NXT09OnpaQfHx8XGyAXGiIeISYdHSMUFBoU
        FBobGyEYGB4YGB4WFhwYGB4YGB4YGB4YGB4YGB4YGB4YGB4YGB4XGh8QExhYW1/DxsvQ1NnOzdHX0crh
        2dLW1tbO0dXS1dnRy8SznoOvk3TTv6bm1cLR1drV1dXc08ng0sCxn4iikXzYzb/b1c7R0dHR1NjS1NXT
        1danp6cbHR4XGh4ZHCEMDxMcHSEVFhoYGR0eHyMcHSEbHCAaGx8bHCAbHCAbHCAbHCAbHCAbHCAbHCAb
        HCAbHiIbHiJjZGjExMrT19zQz9PZ08zj29TV1dXR1NjT1trVz8jAqY+tkW/Dr5bi0bzR1NjR0dHa1M3m
        2s7DtaKik4DBtKTg183a1tHV1dXR09TR1Nikp6saHSEYGhsbHR4tLjJqa294eX17fIB6e394eX15en57
        fIB5en55en55en55en55en55en55en55en55e3yAgoOrqqzU1dnV2N3U1dnc1s/W0MnT0tTT1tvT1Njb
        08zMtpqrj2y3oofgzrfS1NXPz8/b19Lg187Vy7q0ppSpmofZzLzj2tDb2NTN0NTM0tmhp64bHyQbGxse
        HBxTU1O6ubvV1NbY19nR0NLT0tTU09XU09XU09XU09XU09XU09XU09XU09XU09XU09XU0tLX1dXb29vU
        1tfMz9TR0tbf2dTY0s3P0dLT1tvP0tbe1s/Xv6Otj2yumHzdybDU1NTQ0NDZ19bU0Mve1cvIu6ukk37I
        t6Th18bd19DO0dXIz9ibpK4aICcdHR0eGhlKS0nBwcHW1tbX19fT09Pa2trW1tbS0tLW1tbW1tbW1tbW
        1tbW1tbW1tbW1tbY1tbW1NPY1NPX1dXOzc/O0dbNztLd19Le2NPQ0dXS1NzN0NTf19DcxKaukWyslHbY
        w6jV1dXS0tLU1tfS0M/d19DZzsC7qZK4o43Yyrfc1czR1NjGz9mXoK0ZHyYgHh0eGhVQTk3FxcXQ0NDV
        1dXT09PX19fR0dHS0tLT09PT09PT09PT09PT09PT09PT09PV09PT0s7X1NDZ19bS0tLa3eLQ0dXW0s3Y
        1M/S09fR09vMz9Pg2NHfxaeykm6sknTTvKLV1dXT0tTQ1NXV1dXb19Lk2cvVw6yxm4LOwKrb0sjT19zG
        z9yTnqwWHSYiHxsgGhNSUE/Hx8fOzs7Y2NjV1dXT09POzs7Z2dnU1NTU1NTU1NTU1NTU1NTU1NTU1NTW
        1NTX1NDd2NXZ19bKysrW2d7S09fb1tPb1tPU1dnR09vLztLg2NHfxaeykm6uknPQuJzUz8bf3NjP1NfK
        0NfN0dbZ19bh18bCsZyol33l1sPd1s3T0dGgpaggJCkXGRocHBxQUFC/v7/V1dXU1NTT09PT09PV1dXV
        1dXU1NTU1NTU1NTU1NTU1NTU1NTU1NTU1NTR09PU1NTV1tTX1dXT1dbW1NTc1M3Z087T1NjHydPW2t/c
        1M3ewqS2kmqwkG3UtZTb29vR09THys7T1trU1tfRzsrd1s3e0sa7saCuopbc187W0tGfo6QVGR4VGyAU
        GRxMTk++vr7U1NTU1NTU1NTU1NTW1tbW1tbT09PT09PT09PT09PT09PT09PT09PT09PU1NTT09PU0tHS
        0tLQ0tPT09Pc1s/d19LW2NnKzdXV2N3c1M3ZvZ+1kGqsjmvTtpfHzdTP0tfW19Xg3Nfd19Dc1czg2tPY
        0svOysWfmZS/ubLh29ajoaAdICQQFyATGiNKTVG9vb3T09PT09PT09PT09PU1NTT09PT09PT09PT09PT
        09PT09PT09PT09PT09PX2NbW19XV1dXS1NXP0tbS1NXb1c7c1s/Y19nQ0NbU1tff1MzQtJWzj2mqjmzW
        vJ7R1NjT0dDQxbfDsp3Aq5XRvqnd1Mfb1c7b19LFv7qpoJbSyL6xqJ8pJSQUFx8VGiNPUlbBwcHX19fW
        1tbW1tbV1dXV1dXT09PW1tbW1tbW1tbW1tbW1tbW1tbW1tbW1tbV09LV09LT1dXS1tfP1dzR1NnZ1dDc
        08/U0tHV0tTX1dTe0sbHqouzj2urkXPcxKzl3NPBsqKvmX2xlG+ujWawkm/ErpXez7/j2c/e1czDt6u1
        qJqso5YiGhMdHR0WFxtOUFG+vr7T09PT09PT09PT09PT09PQ0NDR0dHR0dHR0dHR0dHR0dHR0dHR0dHT
        0dHS0c3T0dDS0tLQ09fM09zQ1NnZ1tLc1s/T0MzZ1dTb19Layr29oX+vjWmvlnzfyrXbxKqxl3mujWa+
        mW29lmmxjGCxk3DLspjm18Tg1Mji2dC6squKhH8lHxohHBkfGxpWVFPBwcHV1dXV1dXX19fY2NjZ2dnX
        19fW1tbW1tbW1tbW1tbW1tbW1tbW1tbY1tXc2dXb2NTU1tfP0trH0dvL0tvY1dHe1s/W0s3e2NPd1c7L
        u6q3mHevj2y2oIfezr3WtY66lnC1k2i4kmi5kmW8lWm6l2zDpYLm0bve0sje3NzMztZ/goojJCgfGxoi
        HRpVU1K/v7/R0dHQ0NDS0tLT09PU1NTR0dHS0tLS0tLS0tLS0tLS0tLS0tLS0tLU0tHSzsnUz8zQ0tLN
        09rJ0t/L0dzV09Lb08zc1s/e187YzsS6ppSxlG+1lXHEr5rj08bRqn62kGa0kGq0kGqyj2e4lWq3kma7
        m3fhy7LZ0MfN0tvDz+GapbkOFSQjISEbFhM5NzahoaGxsbGurq6urq6urq6vr6+rq6usrKysrKysrKys
        rKysrKysrKysrKyurKuzr6q6t7PBw8PGztXI0+HN1eLX1dTb08zf19Dc08rSxrqrmIOxkW28nHnPvKfo
        2s7WsY+3kmy+lGm+k2LAlmHBmWWxkGO+pYPazbfc187Q1dTJz9SVnaQdIygYGx8ZGh4cHSEiIigoKC4q
        KjAnJy0mJiwpKS8sLDImKDAmKDAnKTEnKTEoKjIoKjIoKjIoKzAlLCkzNDCEeXXk1dPTys3V1N3I1N6+
        ztXQ2NfXz8LOsJO3jGuxi2nKrJPUzbzV2c7bvqOzlnezkW20kWa1kmazkWaskmrItJXk2sjZ1s7U2djT
        2d6fpawhJSoUFRkiISMZGh4ZGh4ZGh4bHCAcHSEaGx8TFhsQExgYGyAYGyAYGyAYGyAXGSEXGSEVGCAU
        GB0YICAWGxphXF7QxszUzdLY1NnU2NnZ3djU1MTLvae0mHqohGa8m4HdxbHf2czQ08rm18TBsJuzoIWo
        k3SokXGym3u8qY7czbrd18rPzMjS1tfU2N2qrbU6PUIVFBgZFhgeHh4eHh4bHR4aHB0bHR4bHR4YGx8X
        Gh4UFxsVGBwUGB0VGR4VGR4VGR4VGR4VGR4PFhkVGR5dX2nKydPX09nd1dXd1Mbk1r/Ww6K8o4GjiWus
        knrMt6jj183e2tXP0Mzh39XTz8TKwrW2rJu1qZfJvavUyrnj2tDb2NDS0M/Z2t7R1NnHx82OjJJgX2FP
        TE5ERUNISUdJSkhERUM8Pj48Pj5ERkZMTk5ESElESElESUxFSk1FSk1FSk1FSk1FSk1HTE9QVl1+hI/C
        xtHR0NTn3NTr1rvkx6LCoXSuj2islHjFtaXY0MnX09LS09HX2NbR1NLW19XZ29XT0MvQzsbZ1s7Z1dDZ
        1NHa2NfW09XW2NnLzNDW19vS09e/vsC0s7W8vbu/wL6/wL65uriwsa+trqyws7G2ube2ube2ube3ubm3
        ubm3ubm3ubm3ubm5ubm3t7e5uLrAxsvV2t3Y1dHg08XWupu9mHKwjWK4mHXDsp3VzsXW19XMz9PQz9Hc
        2dvQ09HP0tDT1dXY2trY2NjT09PT0dHY1tbV09PU0tLV09PPzc3V1dXY2NjT1dbY2tvU1tbT1dXT09PU
        1NTU1dPQ0c/My8fHxsLQz8vR0MzV0s3X1M/Z1tHa19Lc2dHe2NHo3Nbj19HX1MzQy8K7tKOvoYuuk3mt
        jXDDpovWv6nd1cTX2M/P1NLR1dbV1NjVz9TY1tXU0tHOzs7T0tTQ0tPMzdHT0tTa19nV09Ld2djb2NTb
        2NTW19XN0M7Kz87O09LQ1NXP0dLP0dLS1NXY2dfa2NfT0s7PzMjEwbnGwLnGwbjIwbjKwbfKwbfKwbTO
        wLTNuqvGsqG6q5GtoYWklnqkknu6ppTWwLTcysPj19Hh39fV19HO1c7V2Nbb1tjUzdLV0s3c2dXX1dTW
        09XS09fV09nY19vUz9HUz9Dg29rW0s3W087W1dHT1tTS2dbO09TP1NXQ09fT1dbU09XT09PX0tPY1dHc
        1tHf2dLg187c1MfWzcDRxrjKv7HHuqrHt6bJr57JrZXGsIzMuZPdy6bfzrPezsLdz9Dd09nU0NXR0tDR
        1c/U2M3W1tDa1dff194AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>